su<-subset(bf, bf_time>-0.8)
nrow(su)
su<-subset(bf, bf_time<-0.8)
su<-subset(bf, bf_time<=-0.8)
si
su
nrow(bf)
bf<-read.csv("/Volumes/music/phenology/bf_slopes_q5mean_all.csv", header=TRUE, na.strings="", as.is=TRUE) #summer
names(bf)[names(bf)=="species"]<-"new.spp"; names(bf)[names(bf)=="slope_1"]<-"bf_tchange";names(bf)[names(bf)=="slope_2_temp"]<-"bf_temp"; names(bf)[names(bf)=="slope_2_spatial"]<-"bf_spatial"; names(bf)[names(bf)=="slope_3"]<-"bf_time"; names(bf)[names(bf)=="SE_temp"]<-"bf_SEtemp"; names(bf)[names(bf)=="SE_spatial"]<-"bf_SEspatial"; names(bf)[names(bf)=="SE_pheno"]<-"bf_SEpheno"
nrow(bf)
m1<-gls(bf_time~1, weights=varFixed(~1/bf_SEpheno), data=subset(bf, bf_time>-0.8)); summary(m1); qqnorm(m1) #summer
m1<-gls(bf_tchange~1, weights=varFixed(~1/SE_tchange), data=bf); summary(m1); qqnorm(m1)
hist(bf$bf_tchange)
m1<-gls(bf_tchange~1, weights=varFixed(~1/SE_tchange), data=subset(bf, bf_tchange>-0.1)); summary(m1); qqnorm(m1) #summer
hist(bf$bf_tchange)
m1<-gls(bf_tchange~1, weights=varFixed(~1/SE_tchange), data=subset(bf, bf_tchange>-0.1)); summary(m1); qqnorm(m1) #summer
hist(bf$bf_tchange)
max(bf$bf_tchange)
m1<-gls(bf_tchange~1, weights=varFixed(~1/SE_tchange), data=subset(bf, bf_tchange>-0.1 & bf_tchange<0.08)); summary(m1); qqnorm(m1) #summer
5-4.6
cbiftemp<-read.csv("/Volumes/music/phenology/joined/bf_mean_q5.csv", header=TRUE, na.strings="NA", as.is=TRUE) #summer
names(cbiftemp)[9]<-"spr_mean"#
names(cbiftemp)[2]<-"station"#
#
cbiftemp<-subset(cbiftemp, species!="Plebejus glandon" & species!="Boloria frigga" & species!="Boloria chariclea" & species!="Lycaena phlaeas" & species!="Oeneis melissa") #species exclusion due to known collection bias#
cbiftemp<-subset(cbiftemp, species!="Boloria grandis") #sub-spp#
cbiftemp[cbiftemp=="Nymhalidae"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Erynnis afranius","family"]<-c("Hesperiidae")#
cbiftemp[cbiftemp$species=="Oeneis alberta","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Satyrium fuliginosa","family"]<-c("Lycaenidae")#
cbiftemp[cbiftemp$species=="Speyeria aphrodite","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria atlantis","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria callippe","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria cybele","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria edwardsii","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria hesperis","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria mormonia","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria zerene","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Lethe eurydice","species"]<-c("Satyrodes eurydice")#
cbiftemp[cbiftemp$species=="Lethe anthedon","species"]<-c("Enodia anthedon")#
cbiftemp[cbiftemp$species=="Lethe appalachia","species"]<-c("Satyrodes appalachia")#
cbiftemp[cbiftemp$species=="Boloria chariclea","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Boloria frigga","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Oeneis melissa","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Plebejus glandon","family"]<-c("Lycaenidae")#
#
###
win<-read.csv("/Volumes/MUSIC/phenology/2012/cbif_meamax_winspp.csv", header=TRUE, na.strings="NA", as.is=TRUE)#
cbiftemp2<-subset(cbiftemp, med_jul>60 & med_jul<335)#
win2<-subset(win, wintemp>9)#
win2<-win2[,c(1,3:15)]#
win2<-win2[,c("X","station","BO_ID","family","species","year","med_jul","count","spr_mean","x","y")]#
cbiftemp3<-subset(cbiftemp, med_jul<60 & count>1)#
cbiftemp4<-subset(cbiftemp, med_jul>335 & count>1)#
cbiftemp5<-rbind(cbiftemp2, cbiftemp3, cbiftemp4,win2)#
cbiftemp5<-subset(cbiftemp5, BO_ID!="66442" & BO_ID!="88411" & BO_ID!="88412" & BO_ID!="101574" & BO_ID!="104049" & BO_ID!="16950" & BO_ID!="116612")#
cbiftemp<-cbiftemp5#
#
flight<-read.csv("/Volumes/MUSIC/UBC/Thesis/phenology chp/data/flight_gen_newspp3.csv", header=TRUE, na.strings="NA", as.is=TRUE)#
flight<-flight[,c(1,4:8)]#
flight[flight$species=="Lethe anthedon","species"]<-c("Enodia anthedon")#
a<-merge(cbiftemp, flight, by="species", all.x=TRUE)#
spp_flight<-subset(a, migratory!=1)# & avg_generations.per.year=="1") #not migratory or mult generations#
cbiftemp<-spp_flight
cbif2<-merge(cbif, cbiftemp[,c("station","year","spr_mean")], by=c("station","year"))
cbif<-with(cbiftemp, aggregate(med_jul, by=list(station, med_jul), FUN=min, na.rm=TRUE))
names(cbif)[1]<-"station"; names(cbif)[2]<-"year"; names(cbif)[3]<-"min"
cbif2<-merge(cbif, cbiftemp[,c("station","year","spr_mean")], by=c("station","year"))
head(cbif2)
head(Cbif)
head(cbif)
cbif<-with(cbiftemp, aggregate(med_jul, by=list(station, year), FUN=min, na.rm=TRUE))
names(cbif)[1]<-"station"; names(cbif)[2]<-"year"; names(cbif)[3]<-"min"
cbif2<-merge(cbif, cbiftemp[,c("station","year","spr_mean")], by=c("station","year"))
head(cbif2)
cbif3<-unique(cbif2[,c("station","year","min","spr_mean")])
head(cbif3)
library(ggplot2)
ggplot(cbif3, aes(x=spr_mean, y=min))+#
	geom_point(aes(colour=factor(station)), size=2.5)+geom_smooth(method=lm, se=FALSE,size=1, aes(colour=factor(station)))
ggplot(cbif3, aes(x=spr_mean, y=min))+#
	geom_point(aes(colour=factor(station)), size=2.5)+geom_smooth(method=lm, se=FALSE,size=1, aes(colour=factor(station)))+theme_bw()+opts(legend.position="none")
ggplot(cbif3, aes(x=spr_mean, y=min))+#
	geom_point(aes(colour=factor(station)), size=2.5)+geom_smooth(method=lm, se=FALSE,size=1, aes(colour=factor(station)))+theme_bw()+opts(legend.position="none",axis.title.x =theme_text(size=17), axis.text.x=theme_text(size=17), axis.text.y=theme_text(size=17), axis.title.y=theme_text(size=17, angle=90))+ylab("First doy across species")+xlab("Summer temperature (C)")
pl<-read.csv("/Volumes/music/phenology/pl_slopes_q3mean_all.csv", header=TRUE, na.strings="", as.is=TRUE) #spring
nrow(pl)
cbiftemp<-read.csv("/Volumes/music/phenology/joined/plant_mean_q3.csv", header=TRUE, na.strings="", as.is=TRUE) #use for main analysis
names(cbiftemp)[10]<-"spr_mean"#
cbiftemp[cbiftemp$vegetation=="herb",]<-c("Herb")#
cbiftemp[cbiftemp$vegetation=="Shrub ",]<-c("Shrub")#
names(cbiftemp)[2]<-"station"#
cbiftemp[cbiftemp$species=="Bidens  amplissima",]<-c("Bidens amplissima")#
cbiftemp<-subset(cbiftemp, species!="na")#
cbiftemp[cbiftemp$species=="Fritillarialancelolata affinis",]<-c("Fritillaria affinis")
cbiftemp$count2<-1
head(cbiftemp)
cbif<-with(cbiftemp, aggregate(med_jul, by=list(station, year), FUN=min, na.rm=TRUE))
cbiftemp$med_jul<-as.numeric(cbiftemp$med_jul)
cbif<-with(cbiftemp, aggregate(med_jul, by=list(station, year), FUN=min, na.rm=TRUE))
names(cbif)[1]<-"station"; names(cbif)[2]<-"year"; names(cbif)[3]<-"min"
cbif2<-merge(cbif, cbiftemp[,c("station","year","spr_mean")], by=c("station","year"))
cbif3<-unique(cbif2[,c("station","year","min","spr_mean")])
ggplot(cbif3, aes(x=spr_mean, y=min))+#
	geom_point(aes(colour=factor(station)), size=2.5)+geom_smooth(method=lm, se=FALSE,size=1, aes(colour=factor(station)))+theme_bw()+opts(legend.position="none",axis.title.x =theme_text(size=17), axis.text.x=theme_text(size=17), axis.text.y=theme_text(size=17), axis.title.y=theme_text(size=17, angle=90))+ylab("First doy across species")+xlab("Summer temperature (C)")
head(cbif3)
tail(cbif3)
unique(cbif3$station)
unique(cbiftemp$station)
cbiftemp<-subset(cbiftemp, station!="Bidens amplissima" & station!="Shrub" & station!="Herb" & station!="Fritillaria affinis")
cbif<-with(cbiftemp, aggregate(med_jul, by=list(station, year), FUN=min, na.rm=TRUE))
names(cbif)[1]<-"station"; names(cbif)[2]<-"year"; names(cbif)[3]<-"min"
cbif2<-merge(cbif, cbiftemp[,c("station","year","spr_mean")], by=c("station","year"))
cbif3<-unique(cbif2[,c("station","year","min","spr_mean")])
ggplot(cbif3, aes(x=spr_mean, y=min))+#
	geom_point(aes(colour=factor(station)), size=2.5)+geom_smooth(method=lm, se=FALSE,size=1, aes(colour=factor(station)))+theme_bw()+opts(legend.position="none",axis.title.x =theme_text(size=17), axis.text.x=theme_text(size=17), axis.text.y=theme_text(size=17), axis.title.y=theme_text(size=17, angle=90))+ylab("First doy across species")+xlab("Summer temperature (C)")
head(cbif3)
ggplot(cbif3, aes(x=spr_mean, y=min))+#
	geom_point(aes(colour=factor(station)), size=2.5)
cbif3
bf<-read.csv("/Volumes/music/phenology/bf_slopes_q5mean_all.csv", header=TRUE, na.strings="", as.is=TRUE) #summer
names(bf)[names(bf)=="species"]<-"new.spp"; names(bf)[names(bf)=="slope_1"]<-"bf_tchange";names(bf)[names(bf)=="slope_2_temp"]<-"bf_temp"; names(bf)[names(bf)=="slope_2_spatial"]<-"bf_spatial"; names(bf)[names(bf)=="slope_3"]<-"bf_time"; names(bf)[names(bf)=="SE_temp"]<-"bf_SEtemp"; names(bf)[names(bf)=="SE_spatial"]<-"bf_SEspatial"; names(bf)[names(bf)=="SE_pheno"]<-"bf_SEpheno"
nrow(bf)
pl<-read.csv("/Volumes/music/phenology/pl_slopes_q3mean_all.csv", header=TRUE, na.strings="", as.is=TRUE) #spring
names(pl)[names(pl)=="slope_1"]<-"pl_tchange"; names(pl)[names(pl)=="slope_2_temp"]<-"pl_temp"; names(pl)[names(pl)=="slope_2_spatial"]<-"pl_spatial"; names(pl)[names(pl)=="slope_3"]<-"pl_time"; names(pl)[names(pl)=="SE_temp"]<-"pl_SEtemp"; names(pl)[names(pl)=="SE_spatial"]<-"pl_SEspatial"; names(pl)[names(pl)=="SE_pheno"]<-"pl_SEpheno"
hist(pl$pl_temp)
m1<-gls(pl_temp~1, weights=varFixed(~1/pl_SEtemp), data=subset(pl, pl_temp<40)); summary(m1); qqnorm(m1)
library(nlme)#
library(lme4)#
library(AICcmodavg)
m1<-gls(pl_temp~1, weights=varFixed(~1/pl_SEtemp), data=subset(pl, pl_temp<40)); summary(m1); qqnorm(m1)
hist(pl$pl_spatial)
m1<-gls(pl_spatial~1, weights=varFixed(~1/pl_SEspatial), data=subset(pl, pl_spatial<40)); summary(m1); qqnorm(m1)
hist(pl$pl_spatial)
m1<-gls(pl_spatial~1, weights=varFixed(~1/pl_SEspatial), data=subset(pl, pl_spatial<40 & pl_spatial>-20)); summary(m1); qqnorm(m1)
pl<-read.csv("/Volumes/music/phenology/pl_slopes_q5mean_all.csv", header=TRUE, na.strings="", as.is=TRUE) #summer
names(pl)[names(pl)=="slope_1"]<-"pl_tchange"; names(pl)[names(pl)=="slope_2_temp"]<-"pl_temp"; names(pl)[names(pl)=="slope_2_spatial"]<-"pl_spatial"; names(pl)[names(pl)=="slope_3"]<-"pl_time"; names(pl)[names(pl)=="SE_temp"]<-"pl_SEtemp"; names(pl)[names(pl)=="SE_spatial"]<-"pl_SEspatial"; names(pl)[names(pl)=="SE_pheno"]<-"pl_SEpheno"
hist(pl$pl_temp)
m1<-gls(pl_temp~1, weights=varFixed(~1/pl_SEtemp), data=pl); summary(m1); qqnorm(m1)
plot(m1)
m1<-gls(pl_temp~1, weights=varFixed(~1/pl_SEtemp), data=pl); summary(m1); qqnorm(m1)
hist(pl$pl_temp)
hist(pl$pl_spatial)
m1<-gls(pl_spatial~1, weights=varFixed(~1/pl_SEspatial), data=pl); summary(m1); qqnorm(m1)
hist(pl$pl_spatial)
m1<-gls(pl_spatial~1, weights=varFixed(~1/pl_SEspatial), data=pl); summary(m1); qqnorm(m1)
hist(pl$pl_spatial)
m1<-gls(pl_spatial~1, weights=varFixed(~1/pl_SEspatial), data=subset(pl, pl_spatial<30)); summary(m1); qqnorm(m1)
hist(pl$pl_spatial)
m1<-gls(pl_spatial~1, weights=varFixed(~1/pl_SEspatial), data=subset(pl, pl_spatial<30 & pl_spatial>-30)); summary(m1); qqnorm(m1)
hist(pl$pl_spatial)
m1<-gls(pl_spatial~1, weights=varFixed(~1/pl_SEspatial), data=pl); summary(m1); qqnorm(m1)
pl<-read.csv("/Volumes/music/phenology/pl_slopes_q3mean_all.csv", header=TRUE, na.strings="", as.is=TRUE) #spring
names(pl)[names(pl)=="slope_1"]<-"pl_tchange"; names(pl)[names(pl)=="slope_2_temp"]<-"pl_temp"; names(pl)[names(pl)=="slope_2_spatial"]<-"pl_spatial"; names(pl)[names(pl)=="slope_3"]<-"pl_time"; names(pl)[names(pl)=="SE_temp"]<-"pl_SEtemp"; names(pl)[names(pl)=="SE_spatial"]<-"pl_SEspatial"; names(pl)[names(pl)=="SE_pheno"]<-"pl_SEpheno"
hist(pl$pl_spatial)
with(subset(pl, pl_spatial<40), hist(pl_spatial))
m1<-gls(pl_spatial~1, weights=varFixed(~1/pl_SEspatial), data=subset(pl, pl_spatial<40)); summary(m1); qqnorm(m1)
with(subset(pl, pl_spatial<40), hist(pl_spatial))
m1<-gls(pl_spatial~1, weights=varFixed(~1/pl_SEspatial), data=subset(pl, pl_spatial<40 & pl_spatial>-20)); summary(m1); qqnorm(m1)
with(subset(pl, pl_spatial<40), hist(pl_spatial))
with(subset(pl, pl_spatial<40), hist(pl_spatial & pl_spatial>-20))
with(subset(pl, pl_spatial<40 & pl_spatial>-20), hist(pl_spatial))
m1<-gls(pl_spatial~1, weights=varFixed(~1/pl_SEspatial), data=subset(pl, pl_spatial<40 & pl_spatial>-20)); summary(m1); qqnorm(m1)
m1<-gls(pl_spatial~1, weights=varFixed(~1/pl_SEspatial), data=subset(pl, pl_spatial<40)); summary(m1); qqnorm(m1)
with(subset(pl, pl_spatial<40), hist(pl_spatial))
m1<-gls(pl_spatial~1, weights=varFixed(~1/pl_SEspatial), data=subset(pl, pl_spatial<40)); summary(m1); qqnorm(m1)
4840
4*60
2014-1959
?sample
?resample
library(nlme)#
library(lme4)#
library(AICcmodavg)#
rm(list=ls())
int<-read.csv("/Volumes/music/ubc/thesis/plant phenology chp/analysis/int2_best.csv", header=TRUE, na.strings="", as.is=TRUE)
pl<-read.csv("/Volumes/music/phenology/joined/plant_mean_q3.csv", header=TRUE, na.strings="", as.is=TRUE) #spring
pl$count2<-1#
plcount<-with(pl, aggregate(count2, by=list(species), FUN=sum, na.rm=TRUE))#
names(plcount)[1]<-"species"; names(plcount)[2]<-"plss"#
int2<-merge(int, plcount, by="species")
cbiftemp<-read.csv("/Volumes/music/phenology/joined/bf_mean_q5.csv", header=TRUE, na.strings="NA", as.is=TRUE) #summer
names(cbiftemp)[9]<-"spr_mean"#
names(cbiftemp)[2]<-"station"#
#
cbiftemp<-subset(cbiftemp, species!="Plebejus glandon" & species!="Boloria frigga" & species!="Boloria chariclea" & species!="Lycaena phlaeas" & species!="Oeneis melissa") #species exclusion due to known collection bias#
cbiftemp<-subset(cbiftemp, species!="Boloria grandis") #sub-spp#
cbiftemp[cbiftemp=="Nymhalidae"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Erynnis afranius","family"]<-c("Hesperiidae")#
cbiftemp[cbiftemp$species=="Oeneis alberta","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Satyrium fuliginosa","family"]<-c("Lycaenidae")#
cbiftemp[cbiftemp$species=="Speyeria aphrodite","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria atlantis","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria callippe","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria cybele","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria edwardsii","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria hesperis","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria mormonia","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria zerene","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Lethe eurydice","species"]<-c("Satyrodes eurydice")#
cbiftemp[cbiftemp$species=="Lethe anthedon","species"]<-c("Enodia anthedon")#
cbiftemp[cbiftemp$species=="Lethe appalachia","species"]<-c("Satyrodes appalachia")#
cbiftemp[cbiftemp$species=="Boloria chariclea","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Boloria frigga","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Oeneis melissa","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Plebejus glandon","family"]<-c("Lycaenidae")#
#
###
win<-read.csv("/Volumes/MUSIC/phenology/2012/cbif_meamax_winspp.csv", header=TRUE, na.strings="NA", as.is=TRUE)#
cbiftemp2<-subset(cbiftemp, med_jul>60 & med_jul<335)#
win2<-subset(win, wintemp>9)#
win2<-win2[,c(1,3:15)]#
win2<-win2[,c("X","station","BO_ID","family","species","year","med_jul","count","spr_mean","x","y")]#
cbiftemp3<-subset(cbiftemp, med_jul<60 & count>1)#
cbiftemp4<-subset(cbiftemp, med_jul>335 & count>1)#
cbiftemp5<-rbind(cbiftemp2, cbiftemp3, cbiftemp4,win2)#
cbiftemp5<-subset(cbiftemp5, BO_ID!="66442" & BO_ID!="88411" & BO_ID!="88412" & BO_ID!="101574" & BO_ID!="104049" & BO_ID!="16950" & BO_ID!="116612")#
cbiftemp<-cbiftemp5#
#
flight<-read.csv("/Volumes/MUSIC/UBC/Thesis/phenology chp/data/flight_gen_newspp3.csv", header=TRUE, na.strings="NA", as.is=TRUE)#
flight<-flight[,c(1,4:8)]#
flight[flight$species=="Lethe anthedon","species"]<-c("Enodia anthedon")#
a<-merge(cbiftemp, flight, by="species", all.x=TRUE)#
spp_flight<-subset(a, migratory!=1)# & avg_generations.per.year=="1") #not migratory or mult generations#
cbiftemp<-spp_flight
temp.1<-read.csv("/Volumes/music/phenology/temp/q5_mean.csv", header=TRUE, na.strings="", as.is=TRUE) # summer
names(temp.1)[4]<-"spr_mean"#
y3<-with(temp.1, aggregate(spr_mean, by=list(station_id), FUN=mean, na.rm=TRUE))#
names(y3)[1]<-"station"; names(y3)[2]<-"station_mean"
Bgroups<-unique(y3$station); b<-Bgroups; b<-as.character(b)#
for(i in 1:length(b)) {#
spp<-cbiftemp[cbiftemp$station==b[i],];#
cbiftemp[cbiftemp$station==b[i],12]<-y3[y3$station==b[i],2]#
}#
names(cbiftemp)[12]<-"station_mean"
names(cbiftemp)[5]<-"new.spp"#
cbiftemp<-subset(cbiftemp, year>1950)#
cbiftemp$count2<-1#
bfcount<-with(cbiftemp, aggregate(count2, by=list(new.spp), FUN=sum, na.rm=TRUE))#
names(bfcount)[1]<-"new.spp"; names(bfcount)[2]<-"bfss"#
int2<-merge(int2, bfcount, by="new.spp")
int3<-int2[,c("species","new.spp","plss","bfss")]
int3$intid<-1:nrow(int3)
head(int3)
head(bfcount)
head(int2)
head(cbiftemp)
rm(list=ls())
int<-read.csv("/Volumes/music/ubc/thesis/plant phenology chp/analysis/int2_best.csv", header=TRUE, na.strings="", as.is=TRUE)
pl<-read.csv("/Volumes/music/phenology/joined/plant_mean_q3.csv", header=TRUE, na.strings="", as.is=TRUE) #spring
pl$count2<-1#
plcount<-with(pl, aggregate(count2, by=list(species), FUN=sum, na.rm=TRUE))#
names(plcount)[1]<-"species"; names(plcount)[2]<-"plss"#
int2<-merge(int, plcount, by="species")
cbiftemp<-read.csv("/Volumes/music/phenology/joined/bf_mean_q5.csv", header=TRUE, na.strings="NA", as.is=TRUE) #summer#
cbiftemp<-read.csv("/Volumes/music/phenology/joined/bf_mean_q3.csv", header=TRUE, na.strings="NA", as.is=TRUE) #spring#
names(cbiftemp)[9]<-"spr_mean"#
names(cbiftemp)[2]<-"station"#
#
cbiftemp<-subset(cbiftemp, species!="Plebejus glandon" & species!="Boloria frigga" & species!="Boloria chariclea" & species!="Lycaena phlaeas" & species!="Oeneis melissa") #species exclusion due to known collection bias#
cbiftemp<-subset(cbiftemp, species!="Boloria grandis") #sub-spp#
cbiftemp[cbiftemp=="Nymhalidae"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Erynnis afranius","family"]<-c("Hesperiidae")#
cbiftemp[cbiftemp$species=="Oeneis alberta","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Satyrium fuliginosa","family"]<-c("Lycaenidae")#
cbiftemp[cbiftemp$species=="Speyeria aphrodite","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria atlantis","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria callippe","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria cybele","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria edwardsii","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria hesperis","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria mormonia","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria zerene","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Lethe eurydice","species"]<-c("Satyrodes eurydice")#
cbiftemp[cbiftemp$species=="Lethe anthedon","species"]<-c("Enodia anthedon")#
cbiftemp[cbiftemp$species=="Lethe appalachia","species"]<-c("Satyrodes appalachia")#
cbiftemp[cbiftemp$species=="Boloria chariclea","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Boloria frigga","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Oeneis melissa","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Plebejus glandon","family"]<-c("Lycaenidae")#
#
###
win<-read.csv("/Volumes/MUSIC/phenology/2012/cbif_meamax_winspp.csv", header=TRUE, na.strings="NA", as.is=TRUE)#
cbiftemp2<-subset(cbiftemp, med_jul>60 & med_jul<335)#
win2<-subset(win, wintemp>9)#
win2<-win2[,c(1,3:15)]#
win2<-win2[,c("X","station","BO_ID","family","species","year","med_jul","count","spr_mean","x","y")]#
cbiftemp3<-subset(cbiftemp, med_jul<60 & count>1)#
cbiftemp4<-subset(cbiftemp, med_jul>335 & count>1)#
cbiftemp5<-rbind(cbiftemp2, cbiftemp3, cbiftemp4,win2)#
cbiftemp5<-subset(cbiftemp5, BO_ID!="66442" & BO_ID!="88411" & BO_ID!="88412" & BO_ID!="101574" & BO_ID!="104049" & BO_ID!="16950" & BO_ID!="116612")#
cbiftemp<-cbiftemp5#
#
flight<-read.csv("/Volumes/MUSIC/UBC/Thesis/phenology chp/data/flight_gen_newspp3.csv", header=TRUE, na.strings="NA", as.is=TRUE)#
flight<-flight[,c(1,4:8)]#
flight[flight$species=="Lethe anthedon","species"]<-c("Enodia anthedon")#
a<-merge(cbiftemp, flight, by="species", all.x=TRUE)#
spp_flight<-subset(a, migratory!=1)# & avg_generations.per.year=="1") #not migratory or mult generations#
cbiftemp<-spp_flight#
#
temp.1<-read.csv("/Volumes/music/phenology/temp/q5_mean.csv", header=TRUE, na.strings="", as.is=TRUE) # summer
names(temp.1)[4]<-"spr_mean"#
y3<-with(temp.1, aggregate(spr_mean, by=list(station_id), FUN=mean, na.rm=TRUE))#
names(y3)[1]<-"station"; names(y3)[2]<-"station_mean"#
#
Bgroups<-unique(y3$station); b<-Bgroups; b<-as.character(b)#
for(i in 1:length(b)) {#
spp<-cbiftemp[cbiftemp$station==b[i],];#
cbiftemp[cbiftemp$station==b[i],12]<-y3[y3$station==b[i],2]#
}#
names(cbiftemp)[12]<-"station_mean"
names(cbiftemp)[5]<-"new.spp"#
#cbiftemp<-subset(cbiftemp, year>1950)#
cbiftemp$count2<-1#
bfcount<-with(cbiftemp, aggregate(count2, by=list(new.spp), FUN=sum, na.rm=TRUE))#
names(bfcount)[1]<-"new.spp"; names(bfcount)[2]<-"bfss"#
int2<-merge(int2, bfcount, by="new.spp")
head(int2)
head(cbiftemp)
rm(list=ls())
int<-read.csv("/Volumes/music/ubc/thesis/plant phenology chp/analysis/int2_best.csv", header=TRUE, na.strings="", as.is=TRUE)
pl<-read.csv("/Volumes/music/phenology/joined/plant_mean_q3.csv", header=TRUE, na.strings="", as.is=TRUE) #spring
pl$count2<-1#
plcount<-with(pl, aggregate(count2, by=list(species), FUN=sum, na.rm=TRUE))#
names(plcount)[1]<-"species"; names(plcount)[2]<-"plss"#
int2<-merge(int, plcount, by="species")#
##
#
#butterflies:#
cbiftemp<-read.csv("/Volumes/music/phenology/joined/bf_mean_q5.csv", header=TRUE, na.strings="NA", as.is=TRUE) #summer
names(cbiftemp)[9]<-"spr_mean"#
names(cbiftemp)[2]<-"station"#
#
cbiftemp<-subset(cbiftemp, species!="Plebejus glandon" & species!="Boloria frigga" & species!="Boloria chariclea" & species!="Lycaena phlaeas" & species!="Oeneis melissa") #species exclusion due to known collection bias#
cbiftemp<-subset(cbiftemp, species!="Boloria grandis") #sub-spp#
cbiftemp[cbiftemp=="Nymhalidae"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Erynnis afranius","family"]<-c("Hesperiidae")#
cbiftemp[cbiftemp$species=="Oeneis alberta","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Satyrium fuliginosa","family"]<-c("Lycaenidae")#
cbiftemp[cbiftemp$species=="Speyeria aphrodite","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria atlantis","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria callippe","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria cybele","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria edwardsii","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria hesperis","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria mormonia","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Speyeria zerene","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Lethe eurydice","species"]<-c("Satyrodes eurydice")#
cbiftemp[cbiftemp$species=="Lethe anthedon","species"]<-c("Enodia anthedon")#
cbiftemp[cbiftemp$species=="Lethe appalachia","species"]<-c("Satyrodes appalachia")#
cbiftemp[cbiftemp$species=="Boloria chariclea","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Boloria frigga","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Oeneis melissa","family"]<-c("Nymphalidae")#
cbiftemp[cbiftemp$species=="Plebejus glandon","family"]<-c("Lycaenidae")#
#
###
win<-read.csv("/Volumes/MUSIC/phenology/2012/cbif_meamax_winspp.csv", header=TRUE, na.strings="NA", as.is=TRUE)#
cbiftemp2<-subset(cbiftemp, med_jul>60 & med_jul<335)#
win2<-subset(win, wintemp>9)#
win2<-win2[,c(1,3:15)]#
win2<-win2[,c("X","station","BO_ID","family","species","year","med_jul","count","spr_mean","x","y")]#
cbiftemp3<-subset(cbiftemp, med_jul<60 & count>1)#
cbiftemp4<-subset(cbiftemp, med_jul>335 & count>1)#
cbiftemp5<-rbind(cbiftemp2, cbiftemp3, cbiftemp4,win2)#
cbiftemp5<-subset(cbiftemp5, BO_ID!="66442" & BO_ID!="88411" & BO_ID!="88412" & BO_ID!="101574" & BO_ID!="104049" & BO_ID!="16950" & BO_ID!="116612")#
cbiftemp<-cbiftemp5#
#
flight<-read.csv("/Volumes/MUSIC/UBC/Thesis/phenology chp/data/flight_gen_newspp3.csv", header=TRUE, na.strings="NA", as.is=TRUE)#
flight<-flight[,c(1,4:8)]#
flight[flight$species=="Lethe anthedon","species"]<-c("Enodia anthedon")#
a<-merge(cbiftemp, flight, by="species", all.x=TRUE)#
spp_flight<-subset(a, migratory!=1)# & avg_generations.per.year=="1") #not migratory or mult generations#
cbiftemp<-spp_flight#
#
temp.1<-read.csv("/Volumes/music/phenology/temp/q5_mean.csv", header=TRUE, na.strings="", as.is=TRUE) # summer
names(temp.1)[4]<-"spr_mean"#
y3<-with(temp.1, aggregate(spr_mean, by=list(station_id), FUN=mean, na.rm=TRUE))#
names(y3)[1]<-"station"; names(y3)[2]<-"station_mean"#
#
Bgroups<-unique(y3$station); b<-Bgroups; b<-as.character(b)#
for(i in 1:length(b)) {#
spp<-cbiftemp[cbiftemp$station==b[i],];#
cbiftemp[cbiftemp$station==b[i],12]<-y3[y3$station==b[i],2]#
}#
names(cbiftemp)[12]<-"station_mean"
names(cbiftemp)[1]<-"new.spp"
cbiftemp$count2<-1#
bfcount<-with(cbiftemp, aggregate(count2, by=list(new.spp), FUN=sum, na.rm=TRUE))#
names(bfcount)[1]<-"new.spp"; names(bfcount)[2]<-"bfss"#
int2<-merge(int2, bfcount, by="new.spp")
head(int2)
int3<-int2[,c("species","new.spp","plss","bfss")]#
int3$intid<-1:nrow(int3)
Bgroups<-unique(int3$intid); b<-Bgroups; b<-as.character(b)
i<-
1
i<-1
int3[int3$intid==b[i], c("bfss")]>int3[int3$intid==b[i], c("plss")]
bf2<-sample(cbiftemp[cbiftemp$new.spp==int3[int3$intid==b[i],c("new.spp")],c("BO_ID")], int3[i,c("plss")])
bf2
bf2<-as.data.frame(bf2); names(bf2)[1]<-"BO_ID"
spp<-merge(cbiftemp, bf2, by="BO_ID")
head(spp)
nrow(bf2)
spp$diff<-with(spp, spr_mean-station_mean)
new<-data.frame(array(0, c(nrow(int3)*100, 9)))
spp$diff<-with(spp, spr_mean-station_mean)
new<-data.frame(array(0, c(nrow(int3)*100, 9)))#
names(new)[1] = "new.spp"; names(new)[2] = "species"; names(new)[3] = "intid"; names(new)[4] = "BO_ID"; names(new)[5] = "station"; names(new)[6] = "med_jul"; names(new)[7] = "spr_mean"; names(new)[8] = "station_mean"; names(new)[9] = "diff"; names(new)[10]<-"sample"#
Bgroups<-unique(int3$intid); b<-Bgroups; b<-as.character(b)
new<-data.frame(array(0, c(nrow(int3)*100, 10)))#
names(new)[1] = "new.spp"; names(new)[2] = "species"; names(new)[3] = "intid"; names(new)[4] = "BO_ID"; names(new)[5] = "station"; names(new)[6] = "med_jul"; names(new)[7] = "spr_mean"; names(new)[8] = "station_mean"; names(new)[9] = "diff"; names(new)[10]<-"sample"#
Bgroups<-unique(int3$intid); b<-Bgroups; b<-as.character(b)
rowcount<-1
i<-1
for(j in 1:99){#
bf2<-sample(cbiftemp[cbiftemp$new.spp==int3[int3$intid==b[i],c("new.spp")],c("BO_ID")], int3[i,c("plss")])#
bf2<-as.data.frame(bf2); names(bf2)[1]<-"BO_ID"#
spp<-merge(cbiftemp, bf2, by="BO_ID")#
spp$diff<-with(spp, spr_mean-station_mean)#
#asdf<-rowcount+(nrow(spp)-1)#
new[rowcount:asdf,1]<-int3[i,c("new.spp")]#
new[rowcount:asdf,2]<-int3[i,c("plss")]#
new[rowcount:asdf,3]<-b[i]#
new[rowcount:asdf,c(4:9)]<-spp[,c("BO_ID","station","med_jul","spr_mean","station_mean","diff")]#
new[rowcount:asdf,10]<-j#
rowcount<-rowcount+nrow(spp)#
asdf<-rowcount+(nrow(spp)-1)#
}
for(j in 1:99){#
bf2<-sample(cbiftemp[cbiftemp$new.spp==int3[int3$intid==b[i],c("new.spp")],c("BO_ID")], int3[i,c("plss")])#
bf2<-as.data.frame(bf2); names(bf2)[1]<-"BO_ID"#
spp<-merge(cbiftemp, bf2, by="BO_ID")#
spp$diff<-with(spp, spr_mean-station_mean)#
asdf<-rowcount+(nrow(spp)-1)#
new[rowcount:asdf,1]<-int3[i,c("new.spp")]#
new[rowcount:asdf,2]<-int3[i,c("plss")]#
new[rowcount:asdf,3]<-b[i]#
new[rowcount:asdf,c(4:9)]<-spp[,c("BO_ID","station","med_jul","spr_mean","station_mean","diff")]#
new[rowcount:asdf,10]<-j#
rowcount<-rowcount+nrow(spp)#
asdf<-rowcount+(nrow(spp)-1)#
}
head(new)
tail(new)
View(new)
new<-data.frame(array(0, c(nrow(int3)*100, 10)))#
names(new)[1] = "new.spp"; names(new)[2] = "species"; names(new)[3] = "intid"; names(new)[4] = "BO_ID"; names(new)[5] = "station"; names(new)[6] = "med_jul"; names(new)[7] = "spr_mean"; names(new)[8] = "station_mean"; names(new)[9] = "diff"; names(new)[10]<-"sample"#
Bgroups<-unique(int3$intid); b<-Bgroups; b<-as.character(b)#
rowcount<-1#
for(i in 1:length(b)){#
	#If there are more butterfly records than plants, resample#
if(int3[int3$intid==b[i], c("bfss")]>int3[int3$intid==b[i], c("plss")]){#
for(j in 1:99){#
bf2<-sample(cbiftemp[cbiftemp$new.spp==int3[int3$intid==b[i],c("new.spp")],c("BO_ID")], int3[i,c("plss")])#
bf2<-as.data.frame(bf2); names(bf2)[1]<-"BO_ID"#
spp<-merge(cbiftemp, bf2, by="BO_ID")#
spp$diff<-with(spp, spr_mean-station_mean)#
asdf<-rowcount+(nrow(spp)-1)#
new[rowcount:asdf,1]<-int3[i,c("new.spp")]#
new[rowcount:asdf,2]<-int3[i,c("plss")]#
new[rowcount:asdf,3]<-b[i]#
new[rowcount:asdf,c(4:9)]<-spp[,c("BO_ID","station","med_jul","spr_mean","station_mean","diff")]#
new[rowcount:asdf,10]<-j#
rowcount<-rowcount+nrow(spp)#
asdf<-rowcount+(nrow(spp)-1)#
}#
}#
#if there are equal or fewer butterfly records, use all butterfly records#
if(int3[int3$intid==b[i], c("bfss")]<=int3[int3$intid==b[i], c("plss")]){#
spp<-cbiftemp[cbiftemp$new.spp==int3[int3$intid==b[i],c("new.spp")],]#
spp$diff<-with(spp, spr_mean-station_mean)#
asdf<-rowcount+(nrow(spp)-1)#
new[rowcount:asdf,1]<-int3[i,c("new.spp")]#
new[rowcount:asdf,2]<-int3[i,c("plss")]#
new[rowcount:asdf,3]<-b[i]#
new[rowcount:asdf,c(4:9)]<-spp[,c("BO_ID","station","med_jul","spr_mean","station_mean","diff")]#
new[rowcount:asdf,10]<-1#
rowcount<-rowcount+nrow(spp)#
asdf<-rowcount+(nrow(spp)-1)#
}#
print(i)#
}
head(new)
tail(new)
write.csv(new,"/Volumes/music/ubc/thesis/plant phenology chp/analysis/newcbif.csv")
write.csv(new,"/users/kharouba/desktop/ubc/thesis/plant phenology chp/analysis/newcbif.csv")
3535+2032
library(lme4)
library(minqa)
library(lme4)
library(chron)#
data<-read.csv("/users/kharouba/google drive/UWash/UK/observation_data/observations.csv", header=TRUE, na.strings="NA", as.is=TRUE) #alldata#
names(data)[18]<-"species"
start<-strsplit(data$startDate, "/")#
mat<-matrix(unlist(start), ncol=3, byrow=TRUE)#
mat<-as.data.frame(mat); names(mat)[1]<-"startday"; names(mat)[2]<-"startmonth"; names(mat)[3]<-"startyear"#
data$day<-mat$startday; data$month<-mat$startmonth; data$year<-mat$startyear#
day<-data$day#
month<-data$month#
year<-data$year
for(i in 1:length(day)){#
juls[i]<-julian(month[i], day[i], year[i], c(1,0,year[i]));#
print(i)}#
data$julian<-juls
juls<-1
juls
juls<-vector(length(day))
juls<-vector(length=5638976)
length(juls)
juls[1]
for(i in 1:length(day)){#
juls[i]<-julian(month[i], day[i], year[i], c(1,0,year[i]));#
print(i)}#
data$julian<-juls
for(i in 1:1000){#
juls[i]<-julian(month[i], day[i], year[i], c(1,0,year[i]));#
print(i)}
x
x<-c(350,351,353,358,295)
sample(x)
?sample
sample(x,100)
?rep
rep(x, 300)
?rep
11*300
rm(list=ls()) #
options(stringsAsFactors = FALSE)#
setwd("/users/kharouba/google drive/uOttawa/research/synchrony_fitness/")#
#
# libraries#
library(ggplot2)#
library(rstan)#
library(shinystan)#
library(grid)#
library(nlme)#
library(dplyr)#
library(ggrepel)#
library(lme4)#
source("/users/kharouba/google drive/UBC/multiplot.R")#
#
#get data#
rawlong <- read.csv("analysis/input/rawfitness.csv", header=TRUE)#
rawtaxa <- read.csv("analysis/input/rawtaxa.csv", header=TRUE)#
#
rawlong<-subset(rawlong, phenodiffunits!="correlation coefficient")#
#
rawtaxa$int<-with(rawtaxa, paste(studyid,genus,species,genus2,species2))#
#
#for intxn with mult sites: chose site with biggest sample size#
trans2<-subset(rawlong, studyid!="HMK023")#
sub<-subset(rawlong, studyid=="HMK023" & site=="nopporo")#
rawlong<-rbind(trans2,sub)#
#
#now join#
slim<-rawlong[,c("studyid","phenodiff","genus","species","genus2","species2","fitnessvalue","fitnesstype","fitnesscomp")]#
slim$int<-with(slim, paste(studyid,genus,species,genus2,species2))#
#
total<-merge(rawtaxa[,c("studyid","intid","int")], slim, by=c("studyid","int"))
trans2<-subset(total, studyid!="HMK011")#
sub<-subset(total, studyid=="HMK011" & fitnesstype=="survival1")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK026")#
sub<-subset(total, studyid=="HMK026" & fitnesstype=="reproduction")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK029")#
sub<-subset(total, studyid=="HMK029" & fitnesstype=="demographic")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK030")#
sub<-subset(total, studyid=="HMK030" & fitnesstype=="reproduction")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK016")#
sub<-subset(total, studyid=="HMK016" & fitnesstype=="survival")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK050")#
sub<-subset(total, studyid=="HMK050" & fitnesstype=="demographic")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK002")#
sub<-subset(total, studyid=="HMK002" & fitnesstype=="demographic1")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, intid!="int29")#
sub<-subset(total, intid=="int29" & fitnesstype=="fitness")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK025")#
sub<-subset(total, studyid=="HMK025" & fitnesstype=="fitness")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK046")#
sub<-subset(total, studyid=="HMK046" & fitnesstype=="demographic")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK054")#
sub<-subset(total, studyid=="HMK054" & fitnesstype=="fitness")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="AO001")#
sub<-subset(total, studyid=="AO001" & fitnesstype=="reproductive")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK059")#
sub<-subset(total, studyid=="HMK059" & fitnesstype=="demographic1")#
total<-rbind(trans2,sub)
total<-na.omit(total)#
sup<-aggregate(total["phenodiff"], total[c("studyid", "intid")], FUN=mean, na.action=na.omit); names(sup)[3]<-"phenodiffmean"#
#
total2<-merge(total, sup, by=c("studyid","intid"))#
total2$phenodiff_center<-with(total2, phenodiff/phenodiffmean)#
#
sups<-aggregate(total["fitnessvalue"], total[c("studyid", "intid")], FUN=mean, na.action=na.omit); names(sups)[3]<-"fitnessmean"#
total3<-merge(total2, sups, by=c("studyid","intid"))#
total3$fitness_center<-with(total3, fitnessvalue/fitnessmean)#
#
sds<-aggregate(total["fitnessvalue"], total[c("studyid", "intid")], FUN=sd); names(sds)[3]<-"fitness_sd"#
total4<-merge(total3, sds, by=c("studyid","intid"))#
#
total4$fitness_z<-with(total4, (fitnessvalue-fitnessmean)/fitness_sd)
go<-subset(total4, intid!="int38" & studyid!="HMK039" & studyid!="HMK052" & studyid!="HMK050" & studyid!="HMK018" & studyid!="HMK024" & studyid!="HMK026" & intid!="int17") # get rid of HMK018 because residuals, HMK024 because no raw data; HMK050 because same as HMK054; HMK026 because same as HMK030#
# exclude int17 because mismatch index => not measured in days!#
#
#double check count per intxn#
go$count<-1#
sun<-aggregate(go["count"], go[c("studyid", "intid")], FUN=sum)
super<-subset(go, intid!="int4" & intid!="int5" & intid!="int6" & intid!="int30" &  intid!="int15" & intid!="int17" & intid!="int22" & intid!="int23" & intid!="int24" & intid!="int33") #
su<-aggregate(super["phenodiff"], super[c("studyid", "intid")], FUN=range); nrow(su) # check no positive datasets; #
super$year2<-(super$phenodiff_center)^2
ggplot(yano2, aes(y=fitness_z, x=phenodiff, colour=as.factor(intid)))+geom_hline(yintercept=0, linetype="dashed")+geom_point()+geom_smooth(method="lm", se=FALSE)+theme_bw()+theme(legend.position="none", axis.title.x = element_text(size=15), axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.y=element_text(size=15, angle=90))+geom_abline(slope=-0.02, intercept=0.45, size=0.75)+ylab("Fitness (z-score)")+xlab("mismatch (days)")
ggplot(super, aes(y=fitness_z, x=phenodiff, colour=as.factor(intid)))+geom_vline(xintercept=0, linetype="dashed")+geom_hline(yintercept=0, linetype="dashed")+geom_point(size=1)+geom_smooth(method="lm", se=FALSE, formula=y~x+I(x^2))+theme_bw()+theme(legend.position="none", axis.title.x = element_text(size=15), axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.y=element_text(size=15, angle=90))+ylab("Fitness (z-score)")+xlab("mismatch (days)")
ggplot(super, aes(y=fitness_z, x=phenodiff, colour=as.factor(intid)))+geom_vline(xintercept=0, linetype="dashed")+geom_hline(yintercept=0, linetype="dashed")+geom_smooth(method="lm", se=FALSE, formula=y~x+I(x^2))+theme_bw()+theme(legend.position="none", axis.title.x = element_text(size=15), axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.y=element_text(size=15, angle=90))+ylab("Fitness (z-score)")+xlab("mismatch (days)")
a<-ggplot(super, aes(y=fitness_z, x=phenodiff, colour=as.factor(intid)))+geom_vline(xintercept=0, linetype="dashed")+geom_hline(yintercept=0, linetype="dashed")+geom_point(size=1)+geom_smooth(method="lm", se=FALSE, formula=y~x+I(x^2))+theme_bw()+theme(legend.position="none", axis.title.x = element_text(size=15), axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.y=element_text(size=15, angle=90))+ylab("Fitness (z-score)")+xlab("mismatch (days)")#
b<-ggplot(super, aes(y=fitness_z, x=phenodiff, colour=as.factor(intid)))+geom_vline(xintercept=0, linetype="dashed")+geom_hline(yintercept=0, linetype="dashed")+geom_point(size=1)+geom_smooth(method="lm", se=FALSE)+theme_bw()+theme(legend.position="none", axis.title.x = element_text(size=15), axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.y=element_text(size=15, angle=90))+ylab("")+xlab("mismatch (days)")
a<-ggplot(super, aes(y=fitness_z, x=phenodiff, colour=as.factor(intid)))+geom_vline(xintercept=0, linetype="dashed")+geom_hline(yintercept=0, linetype="dashed")+geom_smooth(method="lm", se=FALSE, formula=y~x+I(x^2))+theme_bw()+theme(legend.position="none", axis.title.x = element_text(size=15), axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.y=element_text(size=15, angle=90))+ylab("Fitness (z-score)")+xlab("relative timing (days)")#
b<-ggplot(super, aes(y=fitness_z, x=phenodiff, colour=as.factor(intid)))+geom_vline(xintercept=0, linetype="dashed")+geom_hline(yintercept=0, linetype="dashed")+geom_point(size=1)+geom_smooth(method="lm", se=FALSE)+theme_bw()+theme(legend.position="none", axis.title.x = element_text(size=15), axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.y=element_text(size=15, angle=90))+ylab("")+xlab("relative timing (days)")
multiplot(a,b, cols=2)
a<-ggplot(super, aes(y=fitness_z, x=phenodiff, colour=as.factor(intid)))+geom_vline(xintercept=0, linetype="dashed")+geom_hline(yintercept=0, linetype="dashed")+geom_smooth(method="lm", se=FALSE, formula=y~x+I(x^2))+theme_bw()+theme(legend.position="none", axis.title.x = element_text(size=15), axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.y=element_text(size=15, angle=90))+ylab("Fitness (z-score)")+xlab("relative timing (days)")#
b<-ggplot(super, aes(y=fitness_z, x=phenodiff, colour=as.factor(intid)))+geom_vline(xintercept=0, linetype="dashed")+geom_hline(yintercept=0, linetype="dashed")+geom_smooth(method="lm", se=FALSE)+theme_bw()+theme(legend.position="none", axis.title.x = element_text(size=15), axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.y=element_text(size=15, angle=90))+ylab("")+xlab("relative timing (days)")
multiplot(a,b, cols=2)
go<-subset(total4, intid!="int38" & studyid!="HMK039" & studyid!="HMK052" & studyid!="HMK050" & studyid!="HMK018" & studyid!="HMK024" & studyid!="HMK026" & intid!="int17") # get rid of HMK018 because residuals, HMK024 because no raw data; HMK050 because same as HMK054; HMK026 because same as HMK030
go$count<-1#
sun<-aggregate(go["count"], go[c("studyid", "intid")], FUN=sum)
go$count<-1#
yano<-subset(go, phenodiff>0)#
sun<-aggregate(yano["count"], yano[c("studyid", "intid")], FUN=sum)#
names(sun)[3]<-"totalcount"#
yano2<-merge(yano, sun, by=c("studyid", "intid"))#
yano3<-subset(yano2, totalcount>4)#
yano2<-yano3
N<-nrow(yano2)#
y<-yano2$fitness_z#
year<-yano2$phenodiff#
Nint<-length(unique(yano2$intid)); Nint#
intxn<-as.numeric(as.factor(yano2$intid))
rawlong <- read.csv("analysis/input/rawfitness.csv", header=TRUE)#
rawtaxa <- read.csv("analysis/input/rawtaxa.csv", header=TRUE)#
#
rawlong<-subset(rawlong, phenodiffunits!="correlation coefficient")#
#
rawtaxa$int<-with(rawtaxa, paste(studyid,genus,species,genus2,species2))#
#
#for intxn with mult sites: chose site with biggest sample size#
trans2<-subset(rawlong, studyid!="HMK023")#
sub<-subset(rawlong, studyid=="HMK023" & site=="nopporo")#
rawlong<-rbind(trans2,sub)#
#
#now join#
slim<-rawlong[,c("studyid","phenodiff","genus","species","genus2","species2","fitnessvalue","fitnesstype","fitnesscomp")]#
slim$int<-with(slim, paste(studyid,genus,species,genus2,species2))#
#
total<-merge(rawtaxa[,c("studyid","intid","int")], slim, by=c("studyid","int"))
trans2<-subset(total, studyid!="HMK011")#
sub<-subset(total, studyid=="HMK011" & fitnesstype=="survival1")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK026")#
sub<-subset(total, studyid=="HMK026" & fitnesstype=="reproduction")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK029")#
sub<-subset(total, studyid=="HMK029" & fitnesstype=="demographic")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK030")#
sub<-subset(total, studyid=="HMK030" & fitnesstype=="reproduction")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK016")#
sub<-subset(total, studyid=="HMK016" & fitnesstype=="survival")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK050")#
sub<-subset(total, studyid=="HMK050" & fitnesstype=="demographic")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK002")#
sub<-subset(total, studyid=="HMK002" & fitnesstype=="demographic1")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, intid!="int29")#
sub<-subset(total, intid=="int29" & fitnesstype=="fitness")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK025")#
sub<-subset(total, studyid=="HMK025" & fitnesstype=="fitness")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK046")#
sub<-subset(total, studyid=="HMK046" & fitnesstype=="demographic")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK054")#
sub<-subset(total, studyid=="HMK054" & fitnesstype=="fitness")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="AO001")#
sub<-subset(total, studyid=="AO001" & fitnesstype=="reproductive")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK059")#
sub<-subset(total, studyid=="HMK059" & fitnesstype=="demographic1")#
total<-rbind(trans2,sub)
#center mismatch and fitness#
total<-na.omit(total)#
sup<-aggregate(total["phenodiff"], total[c("studyid", "intid")], FUN=mean, na.action=na.omit); names(sup)[3]<-"phenodiffmean"#
#
total2<-merge(total, sup, by=c("studyid","intid"))#
total2$phenodiff_center<-with(total2, phenodiff/phenodiffmean)#
#
sups<-aggregate(total["fitnessvalue"], total[c("studyid", "intid")], FUN=mean, na.action=na.omit); names(sups)[3]<-"fitnessmean"#
total3<-merge(total2, sups, by=c("studyid","intid"))#
total3$fitness_center<-with(total3, fitnessvalue/fitnessmean)#
#
sds<-aggregate(total["fitnessvalue"], total[c("studyid", "intid")], FUN=sd); names(sds)[3]<-"fitness_sd"#
total4<-merge(total3, sds, by=c("studyid","intid"))#
#
total4$fitness_z<-with(total4, (fitnessvalue-fitnessmean)/fitness_sd)#
# FITNESS: only for intxns where NEGATIVE effect of mismatch predicted i.e. consumers in resource-consumer intxns (ANY SPP WITH POSITIVE ROLE), exclude competition, parasitism but include pollinator#
#
go<-subset(total4, intid!="int38" & studyid!="HMK039" & studyid!="HMK052" & studyid!="HMK050" & studyid!="HMK018" & studyid!="HMK024" & studyid!="HMK026" & intid!="int17") # get rid of HMK018 because residuals, HMK024 because no raw data; HMK050 because same as HMK054; HMK026 because same as HMK030
go$count<-1#
yano<-subset(go, phenodiff>0)#
sun<-aggregate(yano["count"], yano[c("studyid", "intid")], FUN=sum)#
names(sun)[3]<-"totalcount"#
yano2<-merge(yano, sun, by=c("studyid", "intid"))#
yano3<-subset(yano2, totalcount>4)#
yano2<-yano3
N<-nrow(yano2)#
y<-yano2$fitness_z#
year<-yano2$phenodiff#
Nint<-length(unique(yano2$intid)); Nint#
intxn<-as.numeric(as.factor(yano2$intid))
fit.model<-stan("analysis/stanmodels/twolevelrandomslopes_quad.stan", data=c("N","Nint","y","intxn","year", "year2"), iter=8000, chains=4)
ggplot(dr, aes(x=change))+geom_histogram(binwidth=0.0075, colour="black", fill="grey", alpha=.2)+theme_bw()+geom_vline(xintercept=-0.023,size=0.75, colour="red")+geom_vline(xintercept=0,linetype=2,size=0.75)+theme(legend.position="none", axis.title.x = element_text(size=17), axis.text.x=element_text(size=17), axis.text.y=element_text(size=17), axis.title.y=element_text(size=17, angle=90))+ylab("Number of interactions")+xlab("Change in fitness with relative timing (z/days)")+annotate("rect", xmin = -0.041, xmax = -0.00728, ymin = 0, ymax = 5, alpha = .4)
fit.model<-stan("analysis/stanmodels/twolevelrandomslope.stan", data=c("N","Nint","y","intxn","year"), iter=16000, chains=4)
print(fit.model, pars = c("mu_b", "sigma_y", "a", "b"))#
summary(fit.model, pars="mu_b")[[1]]#
asdf<-summary(fit.model, pars="b")[[1]]#
mean(asdf[1:21];
change<-summary(fit.model, pars="b")[[1]][1:24]#
low<-summary(fit.model, pars="b")[[1]][73:96]#
upper<-summary(fit.model, pars="b")[[1]][169:192]#
dr<-data.frame(cbind(change, low, upper))#
dr$id<-1:24
ggplot(dr, aes(x=change))+geom_histogram(binwidth=0.0075, colour="black", fill="grey", alpha=.2)+theme_bw()+geom_vline(xintercept=-0.023,size=0.75, colour="red")+geom_vline(xintercept=0,linetype=2,size=0.75)+theme(legend.position="none", axis.title.x = element_text(size=17), axis.text.x=element_text(size=17), axis.text.y=element_text(size=17), axis.title.y=element_text(size=17, angle=90))+ylab("Number of interactions")+xlab("Change in fitness with relative timing (z/days)")+annotate("rect", xmin = -0.041, xmax = -0.00728, ymin = 0, ymax = 5, alpha = .4)
ggplot(dr, aes(x=change))+geom_histogram(binwidth=0.0075, colour="black", fill="grey", alpha=.2)+theme_bw()+geom_vline(xintercept=-0.023,size=0.75, colour="red")+geom_vline(xintercept=0,linetype=2,size=0.75)+theme(legend.position="none", axis.title.x = element_text(size=17), axis.text.x=element_text(size=17), axis.text.y=element_text(size=17), axis.title.y=element_text(size=17, angle=90))+ylab("Number of interactions")+xlab("Change in fitness with relative timing (z/days)")
ggplot(dr, aes(x=change))+geom_histogram(binwidth=0.0075, colour="black", fill="grey")+theme_bw()+geom_vline(xintercept=-0.023,size=0.75, colour="red")+geom_vline(xintercept=0,linetype=2,size=0.75)+theme(legend.position="none", axis.title.x = element_text(size=17), axis.text.x=element_text(size=17), axis.text.y=element_text(size=17), axis.title.y=element_text(size=17, angle=90))+ylab("Number of interactions")+xlab("Change in fitness with relative timing (z/days)")
ggplot(dr, aes(x=change))+geom_histogram(binwidth=0.0075, colour="black", fill="grey")+theme_bw()+geom_vline(xintercept=-0.023,size=0.75, colour="red")+geom_vline(xintercept=0,linetype=2,size=0.75)+theme(legend.position="none", axis.title.x = element_text(size=17), axis.text.x=element_text(size=17), axis.text.y=element_text(size=17), axis.title.y=element_text(size=17, angle=90))+ylab("Number of interactions")+xlab("Change in fitness with relative timing (z/days)")#
#annotate("rect", xmin = -0.041, xmax = -0.00728, ymin = 0, ymax = 5, alpha = .4)
ggplot(dr, aes(x=change))+geom_histogram(binwidth=0.0075, colour="black", fill="grey")+theme_bw()+geom_vline(xintercept=-0.023,size=0.75, colour="red")+geom_vline(xintercept=0,linetype=2,size=0.75)+theme(legend.position="none", axis.title.x = element_text(size=17), axis.text.x=element_text(size=17), axis.text.y=element_text(size=17), axis.title.y=element_text(size=17, angle=90))+ylab("Number of interactions")+xlab("Change in fitness with relative timing (z/days)")+annotate("rect", xmin = -0.041, xmax = -0.00728, ymin = 0, ymax = 5, alpha = .4)
ggplot(dr, aes(x=change))+geom_histogram(binwidth=0.0075, colour="black", fill="grey", alpha=0.2)+theme_bw()+geom_vline(xintercept=-0.023,size=0.75, colour="red")+geom_vline(xintercept=0,linetype=2,size=0.75)+theme(legend.position="none", axis.title.x = element_text(size=17), axis.text.x=element_text(size=17), axis.text.y=element_text(size=17), axis.title.y=element_text(size=17, angle=90))+ylab("Number of interactions")+xlab("Change in fitness with relative timing (z/days)")+annotate("rect", xmin = -0.041, xmax = -0.00728, ymin = 0, ymax = 5, alpha = .4)
slim2<-rawlong[,c("studyid","year","fitnessvalue","genus","species","genus2","species2","fitnesstype")]#
slim2$int<-with(slim2, paste(studyid,genus,species,genus2,species2))#
#
total<-merge(rawtaxa[,c("studyid","intid","int")], slim2, by=c("studyid","int"))
trans2<-subset(total, studyid!="HMK011")#
sub<-subset(total, studyid=="HMK011" & fitnesstype=="survival1")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK026")#
sub<-subset(total, studyid=="HMK026" & fitnesstype=="reproduction")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK029")#
sub<-subset(total, studyid=="HMK029" & fitnesstype=="demographic")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK030")#
sub<-subset(total, studyid=="HMK030" & fitnesstype=="reproduction")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK016")#
sub<-subset(total, studyid=="HMK016" & fitnesstype=="survival")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK050")#
sub<-subset(total, studyid=="HMK050" & fitnesstype=="demographic")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK002")#
sub<-subset(total, studyid=="HMK002" & fitnesstype=="demographic1")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, intid!="int29")#
sub<-subset(total, intid=="int29" & fitnesstype=="fitness")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK025")#
sub<-subset(total, studyid=="HMK025" & fitnesstype=="fitness")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK046")#
sub<-subset(total, studyid=="HMK046" & fitnesstype=="demographic")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK054")#
sub<-subset(total, studyid=="HMK054" & fitnesstype=="fitness")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="AO001")#
sub<-subset(total, studyid=="AO001" & fitnesstype=="reproductive")#
total<-rbind(trans2,sub)#
#
trans2<-subset(total, studyid!="HMK059")#
sub<-subset(total, studyid=="HMK059" & fitnesstype=="demographic1")#
total<-rbind(trans2,sub)#
#
go<-subset(total, intid!="int38" & studyid!="HMK039" & studyid!="HMK052" & studyid!="HMK050" & studyid!="HMK018" & studyid!="HMK024" & studyid!="HMK026" & intid!="int17") # get rid of HMK018 because residuals, HMK024 because no raw data; HMK050 because same as HMK054; HMK026 because same as HMK030#
# exclude int17 because mismatch index => not measured in days!#
go<-na.omit(go)#
go$year2<-with(go, round(year, digits=0))#
#Hinge
pre<-subset(go, year2<=1980)#
pre$count<-1#
sss<- aggregate(pre["count"], pre[c("studyid", "intid")], FUN=sum)#
sss2<-subset(sss, count>=5) #datasets with enough data pre climate change#
sss2$speciesid<-1:nrow(sss2) #number datas#
#
hinge<-merge(go, sss2, by=c("studyid", "intid"))#
hinge_pre<-subset(hinge, year<=1980); hinge_pre$newyear<-1980#
hinge_post<-subset(hinge, year>1980); hinge_post$newyear<-hinge_post$year#
hinges<-rbind(hinge_pre, hinge_post)#
#
hinge_non<-subset(sss, count<5) #datasets with NOT enough data pre climate change (n=21)#
hinge_non$speciesid<-1:nrow(hinge_non) #number datas#
hinge_non2<-merge(go, hinge_non, by=c("studyid", "intid"))#
hinge_non2$newyear<-hinge_non2$year#
sums<-rbind(hinges, hinge_non2)#
#
letstry<-anti_join(go, sums) #groups of intxns without any data below 1980#
letstry$newyear<-letstry$year#
letstry2<-rbind(letstry, sums[,c("studyid","int", "intid","year","fitnessvalue","genus","species","genus2","species2","fitnesstype","year2","newyear")])#
go<-letstry2#
#
sups<-aggregate(go["fitnessvalue"], go[c("studyid", "intid")], FUN=mean, na.action=na.omit); names(sups)[3]<-"fitnessmean"#
go2<-merge(go, sups, by=c("studyid","intid"))#
#
sds<-aggregate(go["fitnessvalue"], go[c("studyid", "intid")], FUN=sd); names(sds)[3]<-"fitness_sd"#
go3<-merge(go2, sds, by=c("studyid","intid"))#
#
go3$fitness_z<-with(go3, (fitnessvalue-fitnessmean)/fitness_sd)#
go<-go3#
N<-nrow(go)#
y<-go$fitness_z#
year<-go$newyear#
Nint<-length(unique(go$intid)); Nint#
intxn<-as.numeric(as.factor(go$intid))
fit.model<-stan("analysis/stanmodels/twolevelrandomslope.stan", data=c("N","Nint","y","intxn","year"), iter=8000, chains=4)
summary(fit.model, pars="mu_b")[[1]]
fh.sim <- extract(fit.model)# #
it1000 <- matrix(0, ncol=3000, nrow=Nint) #2000 iterations for 53 interactions;#
for (i in 3000:6000){ # 2000 iterations?#
    it1000[,(i-3000)] <- fh.sim$b[i,]#
}#
uni<-unique(go[,c("studyid","intid")])#
uni$fitness<-rowMeans(it1000, na.rm=TRUE)
change<-summary(fit.model, pars="b")[[1]][1:25]#
low<-summary(fit.model, pars="b")[[1]][76:100]#
upper<-summary(fit.model, pars="b")[[1]][176:200]#
dr<-data.frame(cbind(asdf, low, upper))#
dr$id<-1:25#
ggplot(dr, aes(x=reorder(factor(id), change), y=change))+geom_errorbar(aes(ymin=low, ymax=upper), width=.0025, colour="black")+geom_hline(yintercept=0, linetype="dashed")+geom_point(size=4, aes(order=abs(change)))+theme_bw()+coord_flip()+xlab("Interaction")+ylab("Change in fitness (z/year)")+theme(legend.position="none", axis.title.x = element_text(size=15), axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.y=element_text(size=15, angle=90))
summary(fit.model, pars="b")[[1]][1:25]
summary(fit.model, pars="b")[[1]]
change<-summary(fit.model, pars="b")[[1]][1:25]#
low<-summary(fit.model, pars="b")[[1]][76:100]#
upper<-summary(fit.model, pars="b")[[1]][176:200]#
dr<-data.frame(cbind(change, low, upper))#
dr$id<-1:25
ggplot(dr, aes(x=reorder(factor(id), change), y=change))+geom_errorbar(aes(ymin=low, ymax=upper), width=.0025, colour="black")+geom_hline(yintercept=0, linetype="dashed")+geom_point(size=4, aes(order=abs(change)))+theme_bw()+coord_flip()+xlab("Interaction")+ylab("Change in fitness (z/year)")+theme(legend.position="none", axis.title.x = element_text(size=15), axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.y=element_text(size=15, angle=90))
summary(fit.model, pars="mu_b")[[1]]
summary(fit.model, pars="mu_b")[[1]][1]
ggplot(dr, aes(x=reorder(factor(id), change), y=change))+geom_errorbar(aes(ymin=low, ymax=upper), width=.0025, colour="black")+geom_hline(yintercept=0, linetype="dashed")+geom_point(size=4, aes(order=abs(change)))+theme_bw()+coord_flip()+xlab("Interaction")+ylab("Change in fitness (z/year)")+theme(legend.position="none", axis.title.x = element_text(size=15), axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.y=element_text(size=15, angle=90))+geom_hline(yintercept=summary(fit.model, pars="mu_b")[[1]][1], linetype="dashed")
ggplot(dr, aes(x=reorder(factor(id), change), y=change))+geom_errorbar(aes(ymin=low, ymax=upper), width=.0025, colour="black")+geom_hline(yintercept=0, linetype="dashed")+geom_point(size=4, aes(order=abs(change)))+theme_bw()+coord_flip()+xlab("Interaction")+ylab("Change in fitness (z/year)")+theme(legend.position="none", axis.title.x = element_text(size=15), axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.y=element_text(size=15, angle=90))+geom_hline(yintercept=summary(fit.model, pars="mu_b")[[1]][1], linetype="solid")
ggplot(dr, aes(x=reorder(factor(id), change), y=change))+geom_errorbar(aes(ymin=low, ymax=upper), width=.0025, colour="black")+geom_hline(yintercept=0, linetype="dashed")+geom_point(size=4, aes(order=abs(change)))+theme_bw()+coord_flip()+xlab("Interaction")+ylab("Change in fitness (z/year)")+theme(legend.position="none", axis.title.x = element_text(size=15), axis.text.x=element_text(size=15), axis.text.y=element_text(size=15), axis.title.y=element_text(size=15, angle=90))+geom_hline(yintercept=summary(fit.model, pars="mu_b")[[1]][1], linetype="solid", colour="red")
